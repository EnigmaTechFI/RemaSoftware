@using Microsoft.AspNetCore.Mvc.TagHelpers
@model RemaSoftware.WebApp.Models.OrderViewModel.UpdateOrderViewModel

@{
    ViewData["Title"] = "Aggiorna Ordine";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Modifica Ordine</h1>
</div>
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Nuovo ordine</h6>
    </div>
    <div class="card-body">
        <form method="post" id="form-new-order" enctype="multipart/form-data">
            @Html.HiddenFor(model => model.Order.DataIn)
            @Html.HiddenFor(model => model.Order.DataOut)
            @Html.HiddenFor(model => model.Order.ID_FattureInCloud)
            @Html.HiddenFor(model => model.Order.Price_Uni)
            @Html.HiddenFor(model => model.Order.Status)
            @Html.HiddenFor(model => model.Order.OrderID)
            @Html.HiddenFor(model => model.Photo, new { @id = "Photo_base64" })
            @Html.HiddenFor(model => model.Order.Image_URL, new { @id = "imageUrl" })
            <div class="form-group">
                <label for="formGroupExampleInput">Codice</label>
                @Html.DropDownListFor(model => model.Order.SKU, new SelectList(Model.OldOrders_SKU), new { @class = "form-control select2-sku", name="antani"})
            </div>
            <div class="form-group">
                <label for="formGroupExampleInput">Codice DDT</label>
                <input asp-for="Order.DDT" type="text" class="form-control" id="DDT_cod" placeholder="Codice DDT">
            </div>
            <div class="form-group">
                <label>Seleziona Cliente</label>
                @Html.DropDownListFor(model => model.Order.ClientID, new SelectList(Model.Clients, "ClientID", "Name"), Model.Order.Client.Name, new { @class = "form-control" })
            </div>

            <div class="form-group">
                <label for="formGroupExampleInput">Nome</label>
                <input asp-for="Order.Name" type="text" class="form-control" id="order_name" placeholder="Nome">
            </div>

            <div class="form-group">
                <label for="formGroupExampleInput">Numero di pezzi</label>
                <input asp-for="Order.Number_Piece" type="number" class="form-control" id="formGroupExampleInput" placeholder="Numero di pezzi">
            </div>
            <div class="form-group">
                <label for="validationTooltip04">Prezzo Unitario (IVA Esclusa) *</label>
                <div class="input-group-append">
                    <input asp-for="uni_price" type="number" pattern="^[\d,]+$" class="form-control" id="priceUnit" placeholder="@Model.Order.Price_Uni.ToString()">
                    <span class="input-group-text">€</span>
                </div>
            </div>
            <div class="form-group">
                <label>Seleziona data di consegna</label>
                <div class='input-group date'>
                    <input placeholder="@Model.DataOutStr" type='text' class="form-control bg-white" id='datetimepicker1' asp-for="DataOutStr" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>

            <div class="form-group">
                <label for="desc">Descrizione</label>
                <textarea asp-for="Order.Description" class="form-control" id="desc" rows="3"></textarea>
            </div>
            <div class="form-group">
                <label for="note">Note</label>
                <textarea asp-for="Order.Note" class="form-control" id="note" rows="3"></textarea>
            </div>
            <div class="form-group">
                <label>Seleziona operazioni:</label>
                @Html.DropDownListFor(
                    model=>model.OperationsSelected,
                    Model.Operations, 
                    new {multiple="multiple", @class=" form-control select2-edit-operations", id="OperationsSelected", name="OperationsSelected[]", style="width:100%;"})
            </div>
            <div style="width:100px; margin-top:50px;">
                <button class="btn btn-primary" type="button" onclick="PostNewOrder()">Modifica</button>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.9/css/select2.min.css" integrity="sha512-nMNlpuaDPrqlEls3IX/Q56H36qvBASwb3ipuo3MxeWbsQB1881ox0cRv7UPTgBlriqoynt35KjEwgGUeUXIPnw==" crossorigin="anonymous" referrerpolicy="no-referrer"/>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="~/webcamjs/webcam.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.9/js/select2.min.js" integrity="sha512-9p/L4acAjbjIaaGXmZf0Q2bV42HetlCLbv8EP0z3rLbQED2TAFUlDvAezy7kumYqg5T8jHtDdlm1fgIsr5QzKg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        
        $.ajax({
            url: "@Url.Action("GetOperationsByOrderId", "Order")?orderId=" + @Model.Order.OrderID,
            type: "GET",
            success: function (data) {
                if (data != null) {
                    var ddEditOperations = $(".select2-edit-operations");
                    ddEditOperations.select2({
                        placeholder: "Seleziona operazioni",
                        tags: true,
                        createTag: function (tag) {
                            return {
                                id: `0-${tag.term}`,
                                text: tag.term,
                                isNew: true
                            };
                        }
                    });
                    ddEditOperations.on("select2:select", function (evt) {
                        var element = evt.params.data.element;
                        var $element = $(element);

                        $element.detach();
                        $(this).append($element);
                        $(this).trigger("change");
                    });
                    
                    ddEditOperations.val(data.result);
                    for (var i = 0; i<data.result.length; i++){
                        var opt = ddEditOperations.find("[value="+data.result[i]+"]");
                        var $element = $(opt);
                        $element.detach();
                        ddEditOperations.append($element);
                        ddEditOperations.trigger("change");
                    }
                }
            }
        })

        $('#priceUnit').keypress(function (e) {
            if (e.which == 46) {
                e.preventDefault();
            }
        });

        $(".select2-sku").select2({
            placeholder: "Seleziona uno sku o digitane uno nuovo",
            tags: true,
            createTag: function (tag) {
                return {
                    id: tag.term,
                    text: tag.term,
                    isNew: true
                };
            }
        });

        $('.select2-sku').on('select2:open', () => {
            document.querySelector('[aria-controls="select2-Order_SKU-results"].select2-search__field').focus();
        });
        
        $('.select2-operations').select2({
            placeholder: "Seleziona operazioni",
            tags: true,
            createTag: function (tag) {
                return {
                    id: `0-${tag.term}`,
                    text: tag.term,
                    isNew: true
                };
            }
        });
        
        $(".select2-operations").on("select2:select", function (evt) {
          var element = evt.params.data.element;
          var $element = $(element);
          
          $element.detach();
          $(this).append($element);
          $(this).trigger("change");
        });

        function PostNewOrder() {
            ShowLoader();
            var model = $("#form-new-order").serialize();
            $.post('@Url.Action("UpdateOrder", "Order")', model, function (result){
                if (result && result.result == true) {
                    var aElement = document.createElement("a");
                    aElement.setAttribute("type", "hidden");
                    aElement.href = '@Url.Action("DownloadPdfOrder", "Order")' + "?orderId=" + result.orderId;
                    aElement.target = "_blank";
                    document.getElementsByTagName("body")
                    aElement.click();

                    window.location.href='@Model.RedirectUrlAfterCreation';
                } else {
                    toastNotifyError(result.toastMessage);
                }
                HideLoader();
            }).done(function (){
                HideLoader();
            });
        }

        function GetOrderBySKU() {
            var selectedSKU = $('#Order_SKU').val();
            ShowLoader();
            $.ajax({
                url: '@Url.Action("GetOrderBySKU", "Order")?' + $.param({ "orderSKU": selectedSKU }),
                type: 'GET',
                success: function (result) {
                    var src = '@Url.Action("GetImageByOrderId", "Order")' + "?orderId=" + result.data.orderID;
                    document.getElementById('order-img-div').innerHTML = '<img src="' + src + '" width="376" height="282" />';
                    $("#imageUrl").val(result.data.image_URL)
                    $("#order_name").val(result.data.name);
                    $("#Order_ClientID").val(result.data.clientID);
                    toastNotifySuccess("Ordine recuperato correttamente.");
                },
                error: function (data) {
                    document.getElementById('order-img-div').innerHTML = '<img src="" width="376" height="282" />';
                    document.getElementById("Photo_base64").value = "";
                    $("#order_name").val("");
                    document.getElementById("inlineFormCustomSelectPref").selectedIndex = data.client_id;
                    toastNotifyError("Errore nel recupero dell\'ordine.");
                },
                complete: function (){
                    HideLoader();
                }
            });
        }

        function openModal() {
            document.querySelector(".modal").style.display = "block"
        }
        function closeModal() {
            document.querySelector(".modal").style.display = "none"
        }

        $("#datetimepicker1").flatpickr({
            dateFormat: "d/m/Y",
            minDate: "today",
            locale: {
                weekdays: {
                    shorthand: ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'],
                    longhand: ['Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato'],
                },
                    months: {
                        shorthand: ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Оtt', 'Nov', 'Dic'],
                        longhand: ['Gennaio', 'Febbraio', 'Мarzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'],
                    }
            }

        });
    </script>
}




