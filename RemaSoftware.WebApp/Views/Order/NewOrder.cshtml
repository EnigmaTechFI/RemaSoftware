@using Microsoft.AspNetCore.Mvc.TagHelpers
@model RemaSoftware.WebApp.Models.OrderViewModel.NewOrderViewModel

@{
    ViewData["Title"] = "Nuovo Ordine";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Aggiungi Ordine</h1>
</div>
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Nuovo ordine</h6>
    </div>
    <div class="card-body">
        <form method="post">
            <div class="form-group">
                <div class="form-check">
                    <input asp-for="NewSubBatch" class="form-check-input" type="checkbox" id="gridCheck">
                    <label class="form-check-label" for="gridCheck">
                        Selezionare se si vuole creare un nuovo lotto
                    </label>
                </div>
            </div>
            <div class="row">
                @if(Model.Products.Count != 0)
                {
                    <div class="form-group col-6">
                        <label for="formGroupExampleInput">Seleziona prodotto</label>
                        <select asp-for="Ddt_In.ProductID" id="ProductID" class="form-control">
                            @foreach (var item in Model.Products)
                            {
                                <option value="@item.ProductID">@item.SKU - @item.Name</option>
                            }
                        </select>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(model => model.Ddt_In.ProductID)
                }
                <div class="form-group col-6">
                    <label for="formGroupExampleInput">Codice DDT</label>
                    <input asp-for="Ddt_In.Code" type="text" class="form-control" id="DDT_cod" placeholder="Codice DDT">
                </div>
            </div>
            <div class="row">
                <div class="col-6 form-group">
                    <label for="formGroupExampleInput">Numero di pezzi</label>
                    <input min="0" asp-for="Ddt_In.Number_Piece" type="number" class="form-control" id="formGroupExampleInput" placeholder="Numero di pezzi">
                </div>
                <div class="col-6 form-group">
                    <label for="formGroupExampleInput">Numero di pezzi mancanti</label>
                    <input min="0" asp-for="Ddt_In.NumberMissingPiece" type="number" class="form-control" id="formGroupExampleInput" placeholder="Numero di pezzi">
                </div>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <input asp-for="Ddt_In.IsReso" class="form-check-input" type="checkbox" id="gridCheck">
                    <label class="form-check-label" for="gridCheck">
                        Selezionare se si sta inserendo un reso
                    </label>
                </div>
            </div>
            <div class="row">
                <div class="col-6 form-group">
                    <label>Seleziona data di consegna</label>
                    <div class='input-group date'>
                        <input placeholder="Seleziona data di consegna" type='text' class="form-control bg-white" id='datetimepicker1' asp-for="Date" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
                <div class="col-6 form-group">
                    <label for="formGroupExampleInput">Seleziona priorità</label>
                    <select asp-for="Ddt_In.Priority" class="form-control">
                      <option value="0">Minore</option>
                      <option selected="selected" value="1">Normale</option>
                      <option value="2">Maggiore</option>
                      <option value="3">Critica</option>
                      <option value="4">Bloccante</option>
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-6 form-group">
                    <label for="desc">Descrizione</label>
                    <textarea asp-for="Ddt_In.Description" class="form-control" id="desc" rows="3"></textarea>
                </div>
                <div class="col-6 form-group">
                    <label for="note">Note</label>
                    <textarea asp-for="Ddt_In.Note" class="form-control" id="note" rows="3"></textarea>
                </div>
            </div>
            <div class="row">
                <div class="col-12 form-group">
                    <label>Seleziona operazioni:</label>
                    @Html.DropDownListFor(
                        model=>model.OperationsSelected,
                        Model.Operations, 
                        new {multiple="multiple", @class=" form-control select2-operations", id="OperationsSelected", name="OperationsSelected[]", style="width:100%;"})
                </div>
            </div>
            <div class="row">
                <div class="col-6 form-group">
                    <label for="validationTooltip04">Prezzo Unitario (IVA Esclusa) *</label>
                    <div class="input-group-append">
                        <input min="0" for="validationTooltip04" asp-for="Price" value="0.000" type="text" class="form-control" id="priceUnit" placeholder="Prezzo" required>
                        <span class="input-group-text">€</span>
                    </div>
                </div>
                <div class="col-2 form-group">
                    <button type="button" class="btn btn-primary d-none cursor-pointer" data-toggle="modal" data-target="#modalpro" id="price-button" style="position: relative; top: 32px;">
                        <i class="fas fa-fw fa-paper-plane"></i> Promemoria
                    </button>

                </div>
            </div>
            
            <div style="width:100px; margin-top:50px;">
                <button class="btn btn-primary" type="submit" onclick="clickEvent()">Aggiungi</button>
            </div>
        </form>
    </div>
</div>

<div class="loader-cont">
    <div class="spinner-grow" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

<div class="modal fade" id="modalpro" tabindex="-1" role="dialog" aria-labelledby="modal-head" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-head">Invio del promemoria per mail </h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p class="pb-2 font-italic h6">Inviare promemoria?</p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Annulla</button>
                <button class="btn btn-primary" onclick="SendNoPrice()">Invia</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.9/css/select2.min.css" integrity="sha512-nMNlpuaDPrqlEls3IX/Q56H36qvBASwb3ipuo3MxeWbsQB1881ox0cRv7UPTgBlriqoynt35KjEwgGUeUXIPnw==" crossorigin="anonymous" referrerpolicy="no-referrer"/>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.9/js/select2.min.js" integrity="sha512-9p/L4acAjbjIaaGXmZf0Q2bV42HetlCLbv8EP0z3rLbQED2TAFUlDvAezy7kumYqg5T8jHtDdlm1fgIsr5QzKg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
    
        var clicked = false;
        
        function clickEvent() {
            $(".loader-cont").show()
            if(!clicked)
            {
                clicked = true;
                setTimeout(function(){
                    clicked = false;
                }, 1500);
            }
        }

        function SendNoPrice() {
            var product = $("#ProductID").val();
            var operationsSelectedTmp = $("#OperationsSelected").val();
            var operationList =  operationsSelectedTmp.join(', ');
            $.ajax({
                url: '/Order/SendNoPrice',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    product: parseInt(product),
                    operationsSelected: operationList
                }),
                success: function(data) {
                    $("#modalpro").modal('toggle');
                    console.log('Invio completato');
                },
                error: function(xhr, status, error) {
                    $("#modalpro").modal('toggle');
                    console.log('Errore durante il completamento dell\'invio.');
                }
            });
        }


        $('#priceUnit').keypress(function (e) {
            var currentText = $(this).val();
            
            if (e.which == 46 && (currentText.indexOf('.') != -1 || currentText.length === 0)) {
                e.preventDefault();
            }
        });
        
        var ddtEditOperations = $('.select2-operations').select2({
            placeholder: "Seleziona operazioni"
        });
    
        var data = @Json.Serialize(Model.OperationsSelected)
        
        if(data.length != 0){
            ddtEditOperations.val(data).trigger("change");
        }
        
        var date = "today";
        if (@Model.Ddt_In.DataOut.CompareTo(@DateTime.Now) > 0){
           date = '@Model.Ddt_In.DataOut.ToString("dd/MM/yyyy")'
        }
        
        $("#datetimepicker1").flatpickr({
            dateFormat: "d/m/Y",
            minDate: "today",
            defaultDate: date,
            locale: {
                weekdays: {
                    shorthand: ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'],
                    longhand: ['Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato'],
                },
                    months: {
                        shorthand: ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Оtt', 'Nov', 'Dic'],
                        longhand: ['Gennaio', 'Febbraio', 'Мarzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'],
                    }
            }

        });
    </script>

    <script>
        $(document).ready(function () {
            // Funzione per aggiornare i prezzi quando cambia il prodotto o le operazioni selezionate
            var selectedPrice = "0.000";
            function updatePrices() {
                
                var productId = "";
                
                if (@Model.Ddt_In.ProductID){
                    productId = @Model.Ddt_In.ProductID.ToString();
                }else{
                    productId = $("#ProductID").val();
                }
                
                var operationIds = ($("#OperationsSelected").val() || []).map(function(operation) {
                    return operation.split('-')[0]; // Prendi solo la parte prima del trattino
                });
                
                // Pulisci la lista dei prezzi
                $("#Prices").empty();
    
                // Recupera i prezzi associati al prodotto e alle operazioni selezionate
                 var prices = @Html.Raw(Json.Serialize(Model.Prices));
    
                 for (var i = 0; i < prices.length; i++) {
                     var price = prices[i];
                     if (price.product.productID.toString() === productId.toString()) {
                         var operationId = price.priceOperation[0].operation.operationID.toString();
                         if (operationIds.includes(operationId)) {
                             selectedPrice = price.priceVal;
                         }
                     }
                 }
                 
                 $("#priceUnit").val(selectedPrice);
                 
                 if ($("#OperationsSelected").val().length !== 0 && $("#priceUnit").val() === "0.000") {
                    $("#price-button").removeClass("d-none").addClass("d-block");
                 } else {
                    $("#price-button").removeClass("d-block").addClass("d-none");
                 }
            }
    
            $("#ProductID").change(updatePrices);
    
            $("#OperationsSelected").change(updatePrices);
    
            updatePrices();
        });
    </script>
}




