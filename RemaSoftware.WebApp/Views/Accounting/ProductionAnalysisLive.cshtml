@model RemaSoftware.WebApp.Models.AccountingViewModel.ProductionAnalysisLiveViewModel
@{
    ViewData["Title"] = "Monitoraggio live";
}

<link href="https://app.smplrspace.com/lib/smplr.css" rel="stylesheet" />
<script>
let countOperator = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
let counter=0;
function counterTest(){
  setInterval(() => {
    counter++
  }, 1000)    
}
counterTest()
function getTime(seconds, id){
  seconds = seconds - counter;
  setInterval(() => {
    var sec = parseInt(seconds) + counter;
    var date = new Date(sec * 1000).toISOString().substring(11, 19)
    var timeToChange = document.getElementById("time-"+id)
    if (timeToChange){
      timeToChange.innerHTML= "<i>- Tempo: </i>" + date
    }
  }, 1000) 
}
</script>
<h4 class="m-0 font-weight-bold text-primary mb-3">Analisi produzione live</h4>

<div class="row">
  @{
    for (int i = 1; i < 17; i++)
    {
      var op = Model.OperationTimeLines.Where(s => s.MachineId == i).ToList();
      <div class="col-xl-3 col-md-6 mb-4">
        @{
          var css = "";
          if (op.Count != 0)
          {
             css = "success";
          }
          else
          {
            css = "danger";
          }
        }
          <div id="bordo-machine-@i" class="card border-left-@css shadow h-100 py-2">
          <div class="card-body">
            <div class="row no-gutters align-items-center">
              <div id="name-machine-@i" class="col mr-2">
                <h5 id="title-machine-@i" class="text-center font-weight-bold text-@css text-uppercase mb-1">
                  Macchina @i</h5>
                <hr/>
                @if (op.Count != 0)
                {
                  var index = 0;

                  foreach (var item in op)
                  {
                    index++;
                    <script>
                      countOperator[@i] = @index
                    </script>
                    <div id="operation-timeline-@item.OperationTimelineID">
                      <span id="macchina-@i-operatore-@index"><strong>OPERATORE @index:</strong></span><br/>
                      <span><i>- Lotto: </i>@item.SubBatchID</span><br/>
                      <span><i>- Cliente: </i>@item.SubBatch.Ddts_In[0].Product.Client.Name</span><br/>
                      <span><i>- Operazione: </i>@item.BatchOperation.Operations.Name</span><br/>
                      @{ var time = (int)(DateTime.Now - item.StartDate).TotalSeconds; }
                      <span id="time-@item.OperationTimelineID"></span><br/>
                      <hr/>
                      <script>
                        getTime('@time', '@item.OperationTimelineID')
                      </script>
                    </div>
                  }
                }
                else
                {
                  <div id="noop-machine-@i" class="h5 mb-0 font-weight-bold text-gray-800">Nessuna lavorazione in corso</div>
                }

              </div>
              <div class="col-auto">
                <i id="icon-machine-@i" class="fas fa-industry fa-2x text-@css"></i>
              </div>
            </div>
          </div>
        </div>
      </div>
    }
  }
</div>
<h4 class="m-0 font-weight-bold text-primary mb-3">Planimetria live</h4>
<div style="width:100%; height:80vh !important;" id="planimetry">
    
</div>

@section Scripts{
  <script>
  document.addEventListener('DOMContentLoaded', function () {
      // connessione all'hub signalr.
      var connection = new signalR.HubConnectionBuilder()
                          .withUrl('/productionhub')
                          .build();
      
      connection.serverTimeoutInMilliseconds = 900000;
      
      // gli dico cosa fare quando arriva un messaggio
      connection.on('startOperation', function (operation) {
          var nop = document.getElementById("noop-machine-"+ operation.machineId)
          if(nop){
            nop.remove()
          }
          document.getElementById("title-machine-"+ operation.machineId).classList.remove("text-danger")
          document.getElementById("title-machine-"+ operation.machineId).classList.add("text-success")
          document.getElementById("bordo-machine-"+ operation.machineId).classList.remove("border-left-danger")
          document.getElementById("bordo-machine-"+ operation.machineId).classList.add("border-left-success")
          document.getElementById("icon-machine-"+ operation.machineId).classList.remove("text-danger")
          document.getElementById("icon-machine-"+ operation.machineId).classList.add("text-success")
          var div = document.getElementById("name-machine-" + operation.machineId)
          var div2 = document.createElement('div');
          div2.id = "operation-timeline-" + operation.operationTimeLineId
          var span = document.createElement('span')
          var span1 = document.createElement('span')
          var span2 = document.createElement('span')
          var span3 = document.createElement('span')
          var span4 = document.createElement('span')
          span4.id = "time-" + operation.operationTimeLineId
          getTime(operation.seconds, operation.operationTimeLineId)
          var hr = document.createElement('hr');
          countOperator[operation.machineId]++;
          span.id = "macchina-" + operation.machineId + "-operatore-" + countOperator[operation.machineId]
          span.innerHTML = "<strong>OPERATORE "+ countOperator[operation.machineId] +":</strong></br>";
          span1.innerHTML = "- Lotto: " + operation.subBatchId + "</br>";
          span2.innerHTML = "- Cliente: " + operation.clientName + "</br>";
          span3.innerHTML = "- Operazione: " + operation.operationName + "</br>";
          span4.innerHTML = "- Tempo: </br>";
          div2.appendChild(span)
          div2.appendChild(span1)
          div2.appendChild(span2)
          div2.appendChild(span3)
          div2.appendChild(span4)
          div2.appendChild(hr)
          div.appendChild(div2)
          toastNotifySuccess("Una nuova lavorazione alla macchina " + operation.machineId + " Ã¨ appena iniziata.");
      });
      
      connection.on('endOperation', function (operationId, machineId) {
          countOperator[machineId]--;
          var ele = document.getElementById("operation-timeline-" + operationId)
          var opId = ele.childNodes[1].id.split("-")
          var opNumber = parseInt(opId.slice(-1))
          ele.remove()
          if (countOperator[machineId] == 0){
            document.getElementById("title-machine-"+ machineId).classList.remove("text-success")
            document.getElementById("title-machine-"+ machineId).classList.add("text-danger")
            document.getElementById("bordo-machine-"+ machineId).classList.remove("border-left-success")
            document.getElementById("bordo-machine-"+ machineId).classList.add("border-left-danger")
            document.getElementById("icon-machine-"+ machineId).classList.remove("text-success")
            document.getElementById("icon-machine-"+ machineId).classList.add("text-danger")
            var div = document.getElementById("name-machine-" + machineId)
            var div2 = document.createElement('div');
            div2.innerHTML = '<div id="noop-machine-'+ machineId + '" class="h5 mb-0 font-weight-bold text-gray-800">Nessuna lavorazione in corso</div>'
            div.appendChild(div2)
          }
          else{
            for (var i = countOperator[machineId]+1; i > opNumber; i--){
               var operator = document.getElementById("macchina-" + machineId + "-operatore-" + i)
               if (operator){
                 operator.innerHTML = "<strong>OPERATORE "+ (i - 1) +":</strong>";
               }
               else{
                 break
               }
            }
          }
          toastNotifySuccess("Lavorazione alla macchina " + machineId + " conclusa.");
      });
      
      // starto la connessione con il server
      connection.start()
          .then(function () {
              console.log('connection started');
      })
      .catch(error => {
          console.error(error.message);
      });
  });
  </script>
  <script src="../js/demo/smplr.js"></script>
  <script>
    const space = new smplr.Space({
      spaceId: "f76edfb4-4d73-4a2d-9af1-560eccc371f7",
      clientToken: "pub_f7ab71cd2295435ea8906179ed754e6a",
      containerId: "planimetry",
    });
    let allMachine = [];
    const macchina1 = [
      {
        id: '47d8c30c-e95c-58b2-b79e-5gdsfgs',
        name: 'Macchina 2',
        number_operators: 1,
        sub_batch: 5,
        operation: 'Pulimentatura',
        tempo: '0:10:34',
        coordinates: [
          {
            levelIndex: 0,
            x: 14,
            z: -5,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 14,
            z: -8.9,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 17,
            z: -8.9,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 17,
            z: -5,
            elevation: 0
          }
        ]
      }
    ]
    const macchina2 = [
      {
        id: '47d8c30c-e95c-58b2-b79e-51b12b6c69c8',
        name: 'Macchina 1',
        number_operators: 2,
        sub_batch: 3,
        operation: 'Smerigliatura',
        tempo: '0:15:32', 
        coordinates: [
          {
            levelIndex: 0,
            x: 14,
            z: 0,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 14,
            z: -4,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 17,
            z: -4,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 17,
            z: 0,
            elevation: 0
          }
        ]
      }
    ]
    const macchina3 = [
      {
        id: '47d8c30c-e95c-58b2-bdf79e-5gdsfgs',
        name: 'Macchina 3',
        number_operators: 1,
        sub_batch: 5,
        operation: 'Pulimentatura',
        tempo: '0:10:34',
        coordinates: [
          {
            levelIndex: 0,
            x: 14,
            z: -10,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 14,
            z: -13.8,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 17,
            z: -13.8,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 17,
            z: -10,
            elevation: 0
          }
        ]
      }
    ]
    
    const macchina4 = [
      {
        id: '47drge8c30c-e95c-58b2-bdf79e-5gdsfgs',
        name: 'Macchina 4',
        number_operators: 1,
        sub_batch: 5,
        operation: 'Pulimentatura',
        tempo: '0:10:34',
        coordinates: [
          {
            levelIndex: 0,
            x: 7,
            z: -1,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 7,
            z: -3,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 8,
            z: -3,
            elevation: 0
          },
          {
            levelIndex: 0,
            x: 8,
            z: -1,
            elevation: 0
          }
        ]
      }
    ]
    
    allMachine.push(macchina1)
    allMachine.push(macchina2)
    allMachine.push(macchina3)
    allMachine.push(macchina4)
    
    space.startViewer({
      preview: false,
      loadingMessage: "Prova",
      mode: '3d',
      allowModeChange: true,
      onReady: () => addData(),
    }) 
    
    function addData(){
      allMachine.forEach(function (unit){
        space.addDataLayer({
                id: unit[0].id,
                type: 'polygon',
                data: unit,
                tooltip: 'NÂ° OPERATORI: ' + unit[0].number_operators + ' | OPERAZIONE: ' + unit[0].operation + ' | LOTTO: ' + unit[0].sub_batch + ' | TEMPO: ' + unit[0].tempo,
                color: '#4e73df'
              })
        })
      
    }
    
</script>
}