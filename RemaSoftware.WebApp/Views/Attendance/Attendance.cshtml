@model RemaSoftware.WebApp.Models.EmployeeViewModel.AttendanceViewModel

@{
    ViewData["Title"] = "Gestione Presenze";
}

<link rel="stylesheet" href="~/lib/datatables/dataTables.bootstrap4.min.css"/>

<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="d-sm-flex align-items-center justify-content-between card-header py-3">
        <h3 class="m-0 font-weight-bold text-primary">Gestione Presenze</h3>
    </div>
    <form method="get" action="/Attendance/Attendance">
        <div class="row mb-4">
            <div class="col-2 mt-3 ml-3">
                <label for="mese">Mese:</label>
                <select id="mese" name="month" class="form-control">
                    <option value="01" selected="@(Model.Month == 01)">Gennaio</option>
                    <option value="02" selected="@(Model.Month == 02)">Febbraio</option>
                    <option value="03" selected="@(Model.Month == 03)">Marzo</option>
                    <option value="04" selected="@(Model.Month == 04)">Aprile</option>
                    <option value="05" selected="@(Model.Month == 05)">Maggio</option>
                    <option value="06" selected="@(Model.Month == 06)">Giugno</option>
                    <option value="07" selected="@(Model.Month == 07)">Luglio</option>
                    <option value="08" selected="@(Model.Month == 08)">Agosto</option>
                    <option value="09" selected="@(Model.Month == 09)">Settembre</option>
                    <option value="10" selected="@(Model.Month == 10)">Ottobre</option>
                    <option value="11" selected="@(Model.Month == 11)">Novembre</option>
                    <option value="12" selected="@(Model.Month == 12)">Dicembre</option>
                </select>
            </div>
            <div class="col-2 mt-3">
                <label for="anno">Anno:</label>
                <select id="anno" name="year" class="form-control">
                    <option value="2023" selected="@(Model.Year == 2023)">2023</option>
                    <option value="2024" selected="@(Model.Year == 2024)">2024</option>
                    <option value="2025" selected="@(Model.Year == 2025)">2025</option>
                </select>
            </div>
            <div class="col-1 mt-5">
                <input type="submit" name="submitType" value="Visualizza" class="btn btn-primary text-white" data-not-update="false"/>
            </div>
            <div class="col-2 mt-5">
                <input type="submit" name="submitType" value="Aggiorna" class="btn btn-primary text-white" data-not-update="true"/>
            </div>
            <div class="col-2 mt-5">
                <input data-toggle="modal" data-target="#new-modal" type="button" value="Aggiungi a tutti" class="btn btn-primary text-white" id="exportBtn" onclick="AllEmployeeAttendanceId('#modify-modal')"/>
            </div>
            <div class="col-2 mt-5">
                <input type="button" data-toggle="modal" data-target="#modaltxt" value="Invia" class="btn btn-primary text-white" id="sendTXT"/>
            </div>
            <input type="hidden" name="NotUpdate" id="NotUpdate" value="" />
        </div>
    </form>
    <div class="card-body" id="contentToPdf">
    <div class="row " style="margin-left: -1.5%; margin-bottom: 1.1% !important;">
        <div class="ml-5" style="width: 20px; height: 20px; background-color: green; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;"> Presenza</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #003399; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;"> Straodinario</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: red; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;"> Permesso</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #ff7f26; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;"> Malattia</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #36b9cc; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;"> Festivo</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #f6c23e; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;"> Ferie</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #9A83BC; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;">Cassa integrazione</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #3a8fbc; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;">Lavoro durante festivo</div>
    </div>
    <div class="row " style="margin-left: -1.5%; margin-bottom: 1.1% !important;">
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #0000ff; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;">Lavoro supplementare</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #6f00ff; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;">Maggiorazione notturno</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #808080; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;">Permesso per 104</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #ffff66; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;">Infortunio iniziale</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #ffcc66; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;">Infortunio prolungato</div>
        <div class="ml-5" style="width: 20px; height: 20px; background-color: #ffc0cb; border-radius: 5px;"></div><div style="color: black; margin-left: 5px;">Congedo matrimoniale</div>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered" id="table-stock" width="100%" cellspacing="0">
                <tr>
                    <th>Impiegato</th>
                    @for (int giorno = 1; giorno <= DateTime.DaysInMonth(Model.Year, Model.Month); giorno++)
                    {
                        DateTime dataCorrente = new DateTime(Model.Year, Model.Month, giorno);
                        if (dataCorrente.DayOfWeek is DayOfWeek.Saturday or DayOfWeek.Sunday)
                        {
                            <th class="text-center" style="background-color: #d3d3d3;">@giorno</th>
                        }
                        else
                        {
                            <th class="text-center">@giorno</th>
                        }
                    }
                    <td><b>Totale ore</b></td>
                </tr>

                @foreach (var presenza in Model.Attendances.GroupBy(a => a.Employee))
                {
                    <tr onclick="SetEmployeeAttendanceId('#new-modal', @presenza.Key.EmployeeID);">
                    <td style="width: 180px; cursor: pointer;" onclick="highlightRow(this);">
                        <div style="display: inline-block; white-space: nowrap; box-sizing: border-box; width: 80%; float:  left;">
                            <div style="white-space: nowrap; font-size:  18px;"><b>@presenza.Key.Name </b></div>
                            <div style="white-space: nowrap; font-size:  18px;"><b> @presenza.Key.Surname</b> </div>
                        </div>
                        <button style="display: inline-block; cursor: pointer; border: 0px; background-color: white; box-sizing: border-box; width: 20%; float:  right;" title="Nuova Entrata/Uscita" data-toggle="modal" data-target="#new-modal">
                            <span style="color: green; font-weight: bold; font-size: 30px; line-height: 40px; display: inline-block; text-align: center; width: 100%;">+</span>
                        </button>
                    </td>
                        @{
                        TimeSpan? totalTimePresence = TimeSpan.Zero;
                        TimeSpan? totalTimeStraord = TimeSpan.Zero;
                        TimeSpan? totalTimePermit = TimeSpan.Zero;
                        TimeSpan? totalTimeIllness = TimeSpan.Zero;
                        TimeSpan? totalTimeHoliday = TimeSpan.Zero;
                        TimeSpan? totalTimeVacation = TimeSpan.Zero;
                        TimeSpan? totalTimeCassa = TimeSpan.Zero;
                        TimeSpan? totalTimeDuringHoliday = TimeSpan.Zero;
                        TimeSpan? totalTimeSupp = TimeSpan.Zero;
                        TimeSpan? totalTimeMagg = TimeSpan.Zero;
                        TimeSpan? totalTime104 = TimeSpan.Zero;
                        TimeSpan? totalTimeInfIni = TimeSpan.Zero;
                        TimeSpan? totalTimeInf = TimeSpan.Zero;
                        TimeSpan? totalTimeMatr = TimeSpan.Zero;

                        
                        for (int giorno = 1; giorno <= DateTime.DaysInMonth(Model.Year, Model.Month); giorno++)
                        {
                            TimeSpan? totalTimeDay = TimeSpan.Zero;
                            DateTime dataCorrente = new DateTime(Model.Year, Model.Month, giorno);
                            var attendancesForDay = presenza.Where(a => a.DateIn.Day == giorno);

                            if (dataCorrente.DayOfWeek is DayOfWeek.Saturday or DayOfWeek.Sunday)
                            {
                                <td style="background-color: #ededed;">
                                    @{
                                        TimeSpan? totalTime = TimeSpan.Zero;
                                        var NotNull = false;
                                        foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioSabato" || c.Type == "StraordinarioNotturno"))
                                        {
                                            if (presence.DateOut != null)
                                            {
                                                totalTime += presence.DateOut - presence.DateIn;
                                            }
                                            NotNull = true;
                                        }

                                        totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                        totalTimeStraord += totalTime;
                                    }
                                    
                                    @{
                                        string presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-stra";
                                    }
                                    
                                    @if (NotNull && totalTime == TimeSpan.Zero)
                                    {
                                        <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenze('@presenzeDivID')">
                                            <b style="white-space: nowrap; margin: 0 auto;">
                                                In attività
                                            </b>
                                        </div>
                                    }else if (NotNull  && totalTime != TimeSpan.Zero)
                                    {
                                        <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenze('@presenzeDivID')">
                                            <b style="white-space: nowrap; margin: 0 auto;">
                                                @totalTime?.ToString(@"hh")h
                                                @totalTime?.ToString(@"mm")m
                                            </b>
                                        </div>
                                    }
                                    
                                    <div id="@presenzeDivID" style="display: none;">
                                        @foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioSabato" || c.Type == "StraordinarioNotturno"))
                                        {
                                            <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Straordinario">
                                                    <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                </div>
                                            </a>
                                        }
                                    </div>
                                </td>
                            }
                            else
                            {
                                    <td>
                                        @* Presenza *@
                                        @{
                                            TimeSpan? totalTime = TimeSpan.Zero;
                                            var NotNull = false;

                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "Presenza"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                }
                                                NotNull = true;
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            if (totalTime >= TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            
                                            if (presenza.Key.NumberHour == 25)
                                            {
                                                if (totalTime >= TimeSpan.FromHours(5))
                                                {
                                                    totalTime = TimeSpan.FromHours(5);
                                                }
                                            }
                                            
                                            if (presenza.Key.NumberHour == 35)
                                            {
                                                if (totalTime >= TimeSpan.FromHours(7))
                                                {
                                                    totalTime = TimeSpan.FromHours(7);
                                                }
                                            }
                                            totalTimePresence += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            string presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-pre";
                                        }

                                        @if(NotNull && totalTime == TimeSpan.Zero)
                                        {
                                            <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Presenza" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    In attività
                                                </b>
                                            </div>
                                        }
                                        else if(NotNull && totalTime != TimeSpan.Zero)
                                        {
                                            <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Presenza" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }

                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "Presenza"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Presenza">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>

                                        @* Straordinario *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioOrdinario" || c.Type == "StraordinarioNotturno"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                }
                                                NotNull = true;
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeStraord += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-stra";
                                        }

                                        @if (NotNull && totalTime == TimeSpan.Zero)
                                        {
                                            <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    In attività
                                                </b>
                                            </div>
                                        }
                                        else if (NotNull && totalTime != TimeSpan.Zero)
                                        {
                                            <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }

                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioOrdinario" || c.Type == "StraordinarioNotturno"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Straordinario">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Permesso *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimePermit += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-perm";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: red; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                        
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: red; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>

                                        @* Malattia *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "Malattia"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                           
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeIllness += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-mal";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #FF7F26; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Malattia" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                                                            
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "Malattia"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #FF7F26; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Malattia">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Festivo *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "Festivo"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                            
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeHoliday += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-fest";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #36b9cc; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Festivo" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                                                            
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "Festivo"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #36b9cc; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Festivo">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Ferie *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "Ferie"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                            
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeVacation += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-ferie";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #f6c23e; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Ferie" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                                                            
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "Ferie"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #f6c23e; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Ferie">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Cassa Integrazione *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "CassaIntegrazione"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                           
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeCassa += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-cassa";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #9A83BC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Cassa integrazione" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                                                            
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "CassaIntegrazione"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #9A83BC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Cassa integrazione">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Lavoro durante festivo *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "LavoroFestivo"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeDuringHoliday += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-lavholy";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #3A8FBC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Lavoro durante festivo" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                        
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "LavoroFestivo"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #3A8FBC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Lavoro durante festivo">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Lavoro supplementare *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "Supplementare"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeSupp += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-sup";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #0000FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Lavoro supplementare" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                        
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "Supplementare"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #0000FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Lavoro supplementare">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Maggiorazione notturno *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "MaggiorazioneNotturno"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }
                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeMagg += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-maggnot";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #6F00FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Lavoro maggiorazione notturno" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                        
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "MaggiorazioneNotturno"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #6F00FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Lavoro maggiorazione notturno">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Permesso per 104 *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso104"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                           
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }

                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTime104 += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-104";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #808080; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per 104" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                                                            
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso104"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #808080; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per 104">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Permesso per Infortunio iniziale *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioIniziale"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                           
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }

                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeInfIni += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-InfIni";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #ffff00; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per infortunio iniziale" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                                                            
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioIniziale"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #ffff00; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per infortunio iniziale">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Permesso per Infortunio prolungato *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioProlungato"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                           
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }

                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeInf += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-Inf";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #e9e935; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per infortunio prolungato" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                                                            
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioProlungato"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #e9e935; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per infortunio prolungato">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>
                                        
                                        @* Congedo matrimoniale *@
                                        @{
                                            totalTime = TimeSpan.Zero;
                                            NotNull = false;
                                            foreach (var presence in attendancesForDay.Where(c => c.Type == "CongedoMatrimoniale"))
                                            {
                                                if (presence.DateOut != null)
                                                {
                                                    totalTime += presence.DateOut - presence.DateIn;
                                                    NotNull = true;
                                                }
                                            }
                                           
                                            if (totalTime == TimeSpan.FromHours(9))
                                            {
                                                totalTime = TimeSpan.FromHours(8);
                                            }

                                            totalTime = (totalTime.Value.Minutes < 50) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            totalTimeMatr += totalTime;
                                            totalTimeDay += totalTime;
                                        }

                                        @{
                                            presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-Mat";
                                        }
                                        
                                        @if(NotNull){
                                            <div style="color: white; background-color: #FFC0CB; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Congedo matrimoniale" onclick="togglePresenze('@presenzeDivID')">
                                                <b style="white-space: nowrap; margin: 0 auto;">
                                                    @totalTime?.ToString(@"hh")h
                                                    @totalTime?.ToString(@"mm")m
                                                </b>
                                            </div>
                                        }
                                                                            
                                        <div id="@presenzeDivID" style="display: none;">
                                            @foreach (var presence in attendancesForDay.Where(c => c.Type == "CongedoMatrimoniale"))
                                            {
                                                <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                    <div style="color: white; background-color: #FFC0CB; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Congedo matrimoniale">
                                                        <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                    </div>
                                                </a>
                                            }
                                        </div>

                                        @* Calcolo sul permesso rimanente *@
                                        @{
                                            if (totalTimeDay != TimeSpan.Zero)
                                            {
                                                TimeSpan eightHours = default;
                                                
                                                if (presenza.Key.NumberHour == 40)
                                                {
                                                    eightHours = new TimeSpan(8, 0, 0);
                                                }
                                                
                                                if (presenza.Key.NumberHour == 35)
                                                {
                                                    eightHours = new TimeSpan(7, 0, 0);
                                                }
                                                
                                                if (presenza.Key.NumberHour == 25)
                                                {
                                                    eightHours = new TimeSpan(5, 0, 0);
                                                }
                                                
                                                TimeSpan difference = eightHours - totalTimeDay.Value;
                                                
                                                difference = (difference.Minutes < 10) ? TimeSpan.FromHours(difference.Hours) : TimeSpan.FromHours(difference.Hours + 1);
                                                
                                                var firstAttendance = attendancesForDay.FirstOrDefault();
                                                if (difference.TotalMinutes > 50 && firstAttendance.DateIn.Date != DateTime.Today)
                                                {
                                                    <div style="color: white; background-color: red; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center;" title="Permesso">
                                                        <b style="white-space: nowrap; margin: 0 auto;">
                                                            @difference.ToString(@"hh")h
                                                            @difference.ToString(@"mm")m
                                                        </b>
                                                    </div>
                                                    totalTimePermit += difference;
                                                }
                                            }
                                        }
                                    </td>
                                }
                            }
                        }

                        <td>
                            @if (totalTimePresence != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore presenza">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimePresence?.TotalHours}h {totalTimePresence?.Minutes}m")</b>
                                </div>
                            }
                            
                            @if (totalTimeStraord != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore straordinario">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeStraord?.TotalHours}h {totalTimeStraord?.Minutes}m")</b>
                                </div>
                            }
                            
                            @if (totalTimePermit != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: red; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore Permesso">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimePermit?.TotalHours}h {totalTimePermit?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeIllness != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #FF7F26; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore malattia">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeIllness?.TotalHours}h {totalTimeIllness?.Minutes}m") </b>
                                </div>
                            }
                            @if (totalTimeHoliday != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #36b9cc; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore festivo">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeHoliday?.TotalHours}h {totalTimeHoliday?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeVacation != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #f6c23e; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore ferie">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeVacation?.TotalHours}h {totalTimeVacation?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeCassa != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #9A83BC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore Cassa integrazione">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeCassa?.TotalHours}h {totalTimeCassa?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeDuringHoliday != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #3A8FBC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore Lavoro durante festivo">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeDuringHoliday?.TotalHours}h {totalTimeDuringHoliday?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeSupp != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #0000FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore Lavoro supplementare">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeSupp?.TotalHours}h {totalTimeSupp?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeMagg != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #6f00ff; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore Maggiorazione notturno">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeMagg?.TotalHours}h {totalTimeMagg?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTime104 != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #808080; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore Permesso per 104">
                                    <b style="white-space: nowrap;">@($"{(int)totalTime104?.TotalHours}h {totalTime104?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeInfIni != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #ffff00; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore Infortunio iniziale">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeInfIni?.TotalHours}h {totalTimeInfIni?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeInf != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #e9e935; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Totale ore Infortunio prolungato">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeInf?.TotalHours}h {totalTimeInf?.Minutes}m")</b>
                                </div>
                            }
                            @if (totalTimeMatr != TimeSpan.Zero)
                            {
                                <div class="text-center" style="color: white; background-color: #ffc0cb; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Congedo matrimoniale">
                                    <b style="white-space: nowrap;">@($"{(int)totalTimeMatr?.TotalHours}h {totalTimeMatr?.Minutes}m")</b>
                                </div>
                            }

                        </td>
                    </tr>
                }
            </table>

        </div>
    </div>
</div>

<div class="modal fade" id="confirm-del-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Conferma eliminazione</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">Sei sicuro di voler eliminare questa presenza?</div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Annulla</button>
                <button class="btn btn-danger" onclick="DeleteAttendance()">Elimina</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modify-modal" tabindex="-1" role="dialog" aria-labelledby="modal-head" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-head">Modifica Ingresso/Uscita</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p class="pb-2 font-italic h6">Modifica ingresso/uscita:</p>
                <div class="row mb-4">
                    <div class="col-12">
                        <label class="form-check-label"><b>Tipo di registrazione</b></label>
                        <select id="ModifyType" class="form-control">
                            <option selected="selected" value="Presenza">Presenza</option>
                            <option value="Permesso">Permesso</option>
                            <option value="Festivo">Festivo</option>
                            <option value="Malattia">Malattia</option>
                            <option value="Ferie">Ferie</option>
                            <option value="StraordinarioOrdinario">Straordinario Ordinario</option>
                            <option value="StraordinarioSabato">Straordinario Week End</option>
                            <option value="StraordinarioNotturno">Straordinario Notturno</option>
                            <option value="CassaIntegrazione">Cassa integrazione</option>
                            <option value="LavoroFestivo">Lavoro durante festivo</option>
                            <option value="Supplementare">Lavoro supplementare</option>
                            <option value="MaggiorazioneNotturno">Maggiorazione notturno</option>
                            <option value="Permesso104">Permesso per 104</option>
                            <option value="InfortunioIniziale">Infortunio iniziale</option>
                            <option value="InfortunioProlungato">Infortunio prolungato</option>
                            <option value="CongedoMatrimoniale">Congedo matrimoniale</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <label class="form-check-label"><b>Orario Ingresso</b></label>
                        <input class="form-control" type="time" id="ModifyIn"/>

                    </div>
                    <div class="col-6">
                        <label class="form-check-label"><b>Orario Uscita</b></label>
                        <input class="form-control" type="time" id="ModifyOut" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-danger" style="float: left; margin-right: 25%;" data-toggle="modal" data-target="#confirm-del-modal" data-dismiss="modal">Elimina presenza</button>
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <button class="btn btn-primary" onclick="ModifyAttendance()">Conferma</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="new-modal" tabindex="-1" role="dialog" aria-labelledby="modal-head" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-head">Aggiungi Ingresso/Uscita</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p class="pb-2 font-italic h6">Inserire i nuovi orari di ingresso/uscita:</p>
                <div class="row mb-4">
                    <div class="col-12">
                        <label class="form-check-label"><b>Data</b></label>
                        <input class="form-control" type="date" id="DataInOut" />
                    </div>
                </div>
                <div class="row mb-4">
                    <div class="col-12">
                        <label class="form-check-label"><b>Tipo di registrazione</b></label>
                        <select id="Type" class="form-control">
                            <option selected="selected" value="Presenza">Presenza</option>
                            <option value="Permesso">Permesso</option>
                            <option value="Festivo">Festivo</option>
                            <option value="Malattia">Malattia</option>
                            <option value="Ferie">Ferie</option>
                            <option value="StraordinarioOrdinario">Straordinario Ordinario</option>
                            <option value="StraordinarioSabato">Straordinario Week End</option>
                            <option value="StraordinarioNotturno">Straordinario Notturno</option>
                            <option value="CassaIntegrazione">Cassa integrazione</option>
                            <option value="LavoroFestivo">Lavoro durante festivo</option>
                            <option value="Supplementare">Lavoro supplementare</option>
                            <option value="MaggiorazioneNotturno">Maggiorazione notturno</option>
                            <option value="Permesso104">Permesso per 104</option>
                            <option value="InfortunioIniziale">Infortunio iniziale</option>
                            <option value="InfortunioProlungato">Infortunio prolungato</option>
                            <option value="CongedoMatrimoniale">Congedo matrimoniale</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <label class="form-check-label"><b>Orario Ingresso</b></label>
                        <input class="form-control" type="time" id="TimeIn"/>

                    </div>
                    <div class="col-6">
                        <label class="form-check-label"><b>Orario Uscita</b></label>
                        <input class="form-control" type="time" id="TimeOut" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Annulla</button>
                <button class="btn btn-primary" onclick="NewAttendance()">Conferma</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modaltxt" tabindex="-1" role="dialog" aria-labelledby="modal-head" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-head">Invio dei dati per mail </h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p class="pb-2 font-italic h6">Modificare mail se necessario:</p>
                <div class="row mb-4">
                    <div class="col-12">
                        <label class="form-check-label"><b>Mail</b></label>
                        <input class="form-control" type="email" id="mailsend" value="" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Annulla</button>
                <button class="btn btn-primary" onclick="SendAttendance()">Invia</button>
            </div>
        </div>
    </div>
</div>

<style>

table {
  width: 100%;
  border-collapse: collapse;
}

th, td {
  border: 1px solid #ccc;
  padding: 8px;
}

th:first-child,
td:first-child {
  position: sticky;
  left: -0.5px;
  z-index: 1; 
  background-color: white;
}

.highlighted {
    background-color: #DCDCDC;
} 

</style>

@section Scripts
{

    <script>
        
        function SetDataAttendanceId(elementName, attendanceId){
            $(elementName).data("attendanceId", attendanceId);
        }
    
        function SetEmployeeAttendanceId(elementName, employeeId){
            $(elementName).data("employeeId", employeeId);
        }
        
        function SetDataAttendance(elementName, data){
            $(elementName).data("data", data);
        }
        
        function AllEmployeeAttendanceId(elementName){
            $(elementName).data("employeeId", null);
        }
        
        function DeleteAttendance() {
            var attendanceId = $("#confirm-del-modal").data("attendanceId");
            $.ajax({
                url: '/Attendance/DeleteAttendance',
                type: 'POST',
                data: { attendanceId: attendanceId },
                success: function (data) {
                    $("#confirm-del-modal").modal('toggle');
                    console.log('Eliminazione completata');
                },
                error: function (xhr, status, error) {
                    $("#confirm-del-modal").modal('toggle');
                    console.log('Errore durante l\'eliminazione della presenza:');
                }
            });
        }
        
        function ModifyAttendance() {
            var attendanceId = $("#modify-modal").data("attendanceId");

            var model = {
                attendanceId: attendanceId,
                InId: $('#ModifyIn').val(),
                OutId: $('#ModifyOut').val(),
                type: $('#ModifyType').val()
            }
        
            $.post('@Url.Action("ModifyAttendance", "Attendance")', model, function (data){
                $("#modify-modal").modal('toggle');
            });
        }
        
        function NewAttendance(){
            var employeeId = $("#new-modal").data("employeeId");
            
            var dataInOut = $('#DataInOut').val();
            var timeIn = $('#TimeIn').val();
            var timeOut = $('#TimeOut').val();
            var type = $('#Type').val();
            
            var inDateTime = moment(dataInOut + ' ' + timeIn, 'YYYY-MM-DD HH:mm');
            var outDateTime = moment(dataInOut + ' ' + timeOut, 'YYYY-MM-DD HH:mm');
            
            var inIdFormatted = inDateTime.format('YYYY-MM-DD HH:mm:ss');
            var outIdFormatted = outDateTime.format('YYYY-MM-DD HH:mm:ss');
          
            var model = {
                attendanceId: employeeId,
                InId: inIdFormatted,
                OutId: outIdFormatted,
                Type: type
            }
            if (employeeId != null){
                $.post('@Url.Action("NewAttendance", "Attendance")', model, function (data){
                    $("#new-modal").modal('toggle');
                });
            }else{
                $.post('@Url.Action("NewAllAttendance", "Attendance")', model, function (data){
                    $("#new-modal").modal('toggle');
                });
            }
        }
        
         function SendAttendance() {
            var month = $('#mese').val();
            var year = $('#anno').val();
            var mail = $('#mailsend').val();
    
            var model = {
                month: month,
                year: year,
                mail: mail
            };
    
            // Creazione del PDF utilizzando html2pdf.js
            var element = document.getElementById('contentToPdf');
            var opt = {
                margin: 2,
                filename: 'output.pdf',
                image: { type: 'jpeg', quality: 0.7 },
                html2canvas: { scale: 1.5, logging: true }, // Usa una scala di 1 (nessuna riduzione) e abilita il logging per debug
                jsPDF: { unit: 'mm', format: 'a1', orientation: 'landscape' } // Prova un formato di pagina più grande (a3)
            };
    
            html2pdf().from(element).set(opt).outputPdf().then(function (pdfData) {
                // Converti il PDF in una stringa Base64
                var pdfBase64 = btoa(pdfData);
    
                // Invia i dati al controller tramite AJAX
                $.ajax({
                    url: '@Url.Action("SendAttendance", "Attendance")',
                    type: 'POST',
                    data: {
                        month: model.month,
                        year: model.year,
                        mail: model.mail,
                        pdfData: pdfBase64
                    },
                    success: function () {
                        $("#modaltxt").modal('toggle');
                    },
                    error: function () {
                        $("#modaltxt").modal('toggle');
                    }
                });
            });
        }

        
        function togglePresenze(id) {
            var presenzeDiv = document.getElementById(id);
            presenzeDiv.style.display = (presenzeDiv.style.display === "none") ? "block" : "none";
        }
         
        function highlightRow(cell) {
                var row = cell.parentNode;
                var isHighlighted = row.classList.contains('highlighted');
                
                // Rimuove la classe "highlighted" da tutte le righe
                var rows = document.querySelectorAll('tr');
                for (var i = 0; i < rows.length; i++) {
                    rows[i].classList.remove('highlighted');
                }
                
                // Aggiungi la classe "highlighted" alla riga cliccata se non è già evidenziata
                if (!isHighlighted) {
                    row.classList.add('highlighted');
                }
            }
    </script>
    
    <script>
    
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('NotUpdate').value = 'true';
        });

        document.querySelectorAll('input[type="submit"]').forEach(btn => {
            btn.addEventListener('click', function() {
                document.getElementById('NotUpdate').value = this.getAttribute('data-not-update');
            });
        });
    </script>

}