@model RemaSoftware.WebApp.Models.EmployeeViewModel.AttendanceEmployeeViewModel

@{
    ViewData["Title"] = "Gestione Presenze Impiegato";
}

<link rel="stylesheet" href="~/lib/datatables/dataTables.bootstrap4.min.css"/>

<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.3/html2pdf.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="d-sm-flex align-items-center justify-content-between card-header py-3">
        <h4 class="m-0 font-weight-bold text-primary">Presenze @Model.Employee.Name @Model.Employee.Surname</h4>
    </div>
    <form method="get" action="/Attendance/AttendanceEmployee">
        <div class="row mb-4">
            <div class="col-4 mt-3 ml-2">
                <label for="mese">Mese:</label>
                <select id="mese" name="month" class="form-control">
                    <option value="01" selected="@(Model.Month == 01)">Gennaio</option>
                    <option value="02" selected="@(Model.Month == 02)">Febbraio</option>
                    <option value="03" selected="@(Model.Month == 03)">Marzo</option>
                    <option value="04" selected="@(Model.Month == 04)">Aprile</option>
                    <option value="05" selected="@(Model.Month == 05)">Maggio</option>
                    <option value="06" selected="@(Model.Month == 06)">Giugno</option>
                    <option value="07" selected="@(Model.Month == 07)">Luglio</option>
                    <option value="08" selected="@(Model.Month == 08)">Agosto</option>
                    <option value="09" selected="@(Model.Month == 09)">Settembre</option>
                    <option value="10" selected="@(Model.Month == 10)">Ottobre</option>
                    <option value="11" selected="@(Model.Month == 11)">Novembre</option>
                    <option value="12" selected="@(Model.Month == 12)">Dicembre</option>
                </select>
            </div>
            <div class="col-4 mt-3">
                <label for="anno">Anno:</label>
                <select id="anno" name="year" class="form-control">
                    <option value="2023" selected="@(Model.Year == 2023)">2023</option>
                    <option value="2024" selected="@(Model.Year == 2024)">2024</option>
                    <option value="2025" selected="@(Model.Year == 2025)">2025</option>
                </select>
            </div>
            <div class="col-3 mt-5">
                <input type="submit" value="Visualizza" class="btn btn-primary text-white"/>
            </div>
            <div class="col-12 mt-5 ml-5 mr-5">
                <a class="btn btn-primary ml-2 w-25" id="mobile-v" style="color: white;" data-toggle="modal" data-target="#confirm-no-modal">Mancata timbratura</a>
                <a class="btn btn-primary" id="mobile-v1" style="color: white; display: none;" data-toggle="modal" data-target="#confirm-no-modal">Mancata timbratura</a>
            </div>
        </div>
    </form>
    <div class="card-body" id="contentToPdf">
        <div class="row mb-3" id="mobile-v2" style=" margin-bottom: 1.1% !important;">
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: green; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;"> Presenza</div>
            </div>
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: #003399; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;"> Straodinari</div>
            </div>
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: red; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;" > Permesso</div>
            </div>
        </div>
        
        <div class="row mb-3" id="mobile-v3" style="margin-bottom: 1.1% !important;">
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: #ff7f26; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;"> Malattia</div>
            </div>
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: #36b9cc; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;"> Festivo</div>
            </div>
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: #f6c23e; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;"> Ferie</div>
            </div>
        </div>
        
        <div class="row mb-3" id="mobile-v3" style="margin-bottom: 1.1% !important;">
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: #9A83BC; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;">Cassa Int.</div>
            </div>
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: #3a8fbc; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;">Lavoro festivo</div>
            </div>
            <div class="col-4" style="display: flex;">
                <div style="width: 18px; height: 18px; background-color: #0000ff; border-radius: 5px;"></div>
                <div class="ml-1" style="color: black; font-size:  13px;">Lavoro suppl.</div>
            </div>
        </div>
        
    <div class="row mb-3" id="mobile-v3" style="margin-bottom: 1.1% !important;">
        <div class="col-4" style="display: flex;">
            <div style="width: 18px; height: 18px; background-color: #808080; border-radius: 5px;"></div>
            <div class="ml-1" style="color: black; font-size:  13px;">Permesso 104</div>
        </div>
        <div class="col-4" style="display: flex;">
            <div style="width: 18px; height: 18px; background-color: #ffff66; border-radius: 5px;"></div>
            <div class="ml-1" style="color: black; font-size:  13px;">Infortunio iniz.</div>
        </div>
        <div class="col-4" style="display: flex;">
            <div style="width: 18px; height: 18px; background-color: #6f00ff; border-radius: 5px;"></div>
            <div class="ml-1" style="color: black; font-size:  13px;">Infortunio prol.</div>
        </div>
    </div>
    
    <div class="row mb-3" id="mobile-v3" style="margin-bottom: 1.1% !important;">
        <div class="col-4" style="display: flex;">
            <div style="width: 18px; height: 18px; background-color: #6f00ff; border-radius: 5px;"></div>
            <div class="ml-1" style="color: black; font-size:  13px;">Maggio. nott.</div>
        </div>
        <div class="col-4" style="display: flex;">
            <div style="width: 18px; height: 18px; background-color: #ffc0cb; border-radius: 5px;"></div>
            <div class="ml-1" style="color: black; font-size:  13px;">Congedo matr.</div>
        </div>
    </div>
        
        <div class="table-responsive mt-5" id="mobile-v4">
            <table>
            <tr>
                @for (int giorno = 1; giorno <= DateTime.DaysInMonth(Model.Year, Model.Month); giorno++)
                {
                    DateTime dataCorrente = new DateTime(Model.Year, Model.Month, giorno);
                    if (dataCorrente.DayOfWeek is DayOfWeek.Saturday or DayOfWeek.Sunday)
                    {
                        <th class="text-center" style="background-color: #d3d3d3;">@giorno</th>
                    }
                    else
                    {
                        <th class="text-center">@giorno</th>
                    }
                }
            </tr>
                
            @foreach (var presenza in Model.Attendances.GroupBy(a => a.Employee))
            {
                <tr>
                    @for (int giorno = 1; giorno <= DateTime.DaysInMonth(Model.Year, Model.Month); giorno++)
                    {
                        DateTime dataCorrente = new DateTime(Model.Year, Model.Month, giorno);
                        var attendancesForDay = presenza.Where(a => a.DateIn.Day == giorno);

                        if (dataCorrente.DayOfWeek is DayOfWeek.Saturday or DayOfWeek.Sunday)
                        {
                            <td style="background-color: #ededed;">
                                    
                                @{
                                    TimeSpan? totalTime = TimeSpan.Zero;
                                    var NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioSabato" || c.Type == "StraordinarioNotturno"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                        }
                                        NotNull = true;
                                    }
                                    
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }
                                    

                                @{
                                    string presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-stra";
                                }
                                    
                                @if (NotNull && totalTime == TimeSpan.Zero)
                                {
                                    <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            In attività
                                        </b>
                                    </div>
                                }else if (NotNull  && totalTime != TimeSpan.Zero)
                                {
                                    <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                    
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioSabato" || c.Type == "StraordinarioNotturno"))
                                    {
                                        <a style="cursor: pointer;">
                                            <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Straordinario">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                            </td>
                        }
                        else
                        {
                            <td>
                                @* Presenza *@
                                @{
                                    TimeSpan? totalTime = TimeSpan.Zero;
                                    var NotNull = false;

                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "Presenza"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                        }
                                        NotNull = true;
                                    }
                                    if (totalTime > TimeSpan.FromHours(8))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    string presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-pre";
                                }

                                @if (NotNull && totalTime == TimeSpan.Zero)
                                {
                                    <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Presenza" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            In attività
                                        </b>
                                    </div>
                                }
                                else if (NotNull && totalTime != TimeSpan.Zero)
                                {
                                    <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Presenza" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }

                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "Presenza"))
                                    {
                                        <a style="cursor: pointer;">
                                            <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Presenza">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>

                                @* Straordinario *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioOrdinario" || c.Type == "StraordinarioNotturno"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                        }
                                        NotNull = true;
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-stra";
                                }

                                @if (NotNull && totalTime == TimeSpan.Zero)
                                {
                                    <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            In attività
                                        </b>
                                    </div>
                                }
                                else if (NotNull && totalTime != TimeSpan.Zero)
                                {
                                    <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }

                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioOrdinario" || c.Type == "StraordinarioNotturno"))
                                    {
                                        <a style="cursor: pointer;">
                                            <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Straordinario">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                    
                                @* Permesso *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);

                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-perm";
                                }
                                    
                                @if(NotNull){
                                    <div style="color: white; background-color: red; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                    
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso"))
                                    {
                                        <a style="cursor: pointer;">
                                            <div style="color: white; background-color: red; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                    
                                @* Malattia *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "Malattia"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-mal";
                                }
                                    
                                @if(NotNull){
                                    <div style="color: white; background-color: #FF7F26; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Malattia" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                                                        
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "Malattia"))
                                    {
                                        <a style="cursor: pointer;">
                                            <div style="color: white; background-color: #FF7F26; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Malattia">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                    
                                @* Festivo *@
                                    
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "Festivo"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-fest";
                                }
                                    
                                @if(NotNull){
                                    <div style="color: white; background-color: #36b9cc; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Festivo" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                                                        
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "Festivo"))
                                    {
                                        <a style="cursor: pointer;">
                                            <div style="color: white; background-color: #36b9cc; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Festivo">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                    
                                @* Ferie *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "Ferie"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);

                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-ferie";
                                }
                                    
                                @if(NotNull){
                                    <div style="color: white; background-color: #f6c23e; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Ferie" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                                                        
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "Ferie"))
                                    {
                                        <a style="cursor: pointer;">
                                            <div style="color: white; background-color: #f6c23e; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Ferie">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                
                                @* Cassa Integrazione *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "CassaIntegrazione"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-cassa";
                                }
                                    
                                @if(NotNull){
                                    <div style="color: white; background-color: #9A83BC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Cassa" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                                                        
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "CassaIntegrazione"))
                                    {
                                        <a style="cursor: pointer;">
                                            <div style="color: white; background-color: #9A83BC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Cassa integrazione">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                
                                
                                @* Lavoro durante festivo *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "LavoroFestivo"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-lavholy";
                                }
                                
                                @if(NotNull){
                                    <div style="color: white; background-color: #3A8FBC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Lavoro durante festivo" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "LavoroFestivo"))
                                    {
                                        <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                            <div style="color: white; background-color: #3A8FBC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Lavoro durante festivo">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                
                                
                                @* Lavoro supplementare *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "Supplementare"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-sup";
                                }
                                
                                @if(NotNull){
                                    <div style="color: white; background-color: #0000FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Lavoro supplementare" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "Supplementare"))
                                    {
                                        <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                            <div style="color: white; background-color: #0000FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Lavoro supplementare">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                
                                
                                @* Maggiorazione notturno *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "MaggiorazioneNotturno"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }
                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-maggnot";
                                }
                                
                                @if(NotNull){
                                    <div style="color: white; background-color: #6F00FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Lavoro maggiorazione notturno" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "MaggiorazioneNotturno"))
                                    {
                                        <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                            <div style="color: white; background-color: #6F00FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Lavoro maggiorazione notturno">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                
                                @* Permesso per 104 *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso104"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                   
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }

                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-104";
                                }
                                
                                @if(NotNull){
                                    <div style="color: white; background-color: #808080; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per 104" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                                                    
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso104"))
                                    {
                                        <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                            <div style="color: white; background-color: #808080; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per 104">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                
                                @* Permesso per Infortunio iniziale *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioIniziale"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                   
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }

                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-InfIni";
                                }
                                
                                @if(NotNull){
                                    <div style="color: white; background-color: #ffff00; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per infortunio iniziale" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                                                    
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioIniziale"))
                                    {
                                        <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                            <div style="color: white; background-color: #ffff00; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per infortunio iniziale">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                
                                
                                @* Permesso per Infortunio prolungato *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioProlungato"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                   
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }

                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-Inf";
                                }
                                
                                @if(NotNull){
                                    <div style="color: white; background-color: #e9e935; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per infortunio prolungato" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                                                    
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioProlungato"))
                                    {
                                        <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                            <div style="color: white; background-color: #e9e935; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per infortunio prolungato">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                                
                                @* Congedo matrimoniale *@
                                @{
                                    totalTime = TimeSpan.Zero;
                                    NotNull = false;
                                    foreach (var presence in attendancesForDay.Where(c => c.Type == "CongedoMatrimoniale"))
                                    {
                                        if (presence.DateOut != null)
                                        {
                                            totalTime += presence.DateOut - presence.DateIn;
                                            NotNull = true;
                                        }
                                    }
                                   
                                    if (totalTime == TimeSpan.FromHours(9))
                                    {
                                        totalTime = TimeSpan.FromHours(8);
                                    }

                                    totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                }

                                @{
                                    presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-Mat";
                                }
                                
                                @if(NotNull){
                                    <div style="color: white; background-color: #FFC0CB; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Congedo matrimoniale" onclick="togglePresenze('@presenzeDivID')">
                                        <b style="white-space: nowrap; margin: 0 auto;">
                                            @totalTime?.ToString(@"hh")h
                                            @totalTime?.ToString(@"mm")m
                                        </b>
                                    </div>
                                }
                                                                    
                                <div id="@presenzeDivID" style="display: none;">
                                    @foreach (var presence in attendancesForDay.Where(c => c.Type == "CongedoMatrimoniale"))
                                    {
                                        <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                            <div style="color: white; background-color: #FFC0CB; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Congedo matrimoniale">
                                                <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                            </div>
                                        </a>
                                    }
                                </div>
                            </td>
                        }
                    }
                
                </tr>
            }
        </table>
        </div>
    
        <div class="table-responsive mt-5 d-none" id="mobile-v5" style="border-radius: 15px; border: 1px solid black;">
            <div class="parallel-tables">
                <div class="table-column">
                    <table>
                        <tr style="height: 40px;">
                            <th class="text-center w-25" style="color: black;">Giorno</th>
                            <th class="text-center w-75" style="color: black;">Presenza</th>
                        </tr>
                        @foreach (var presenza in Model.Attendances.GroupBy(a => a.Employee))
                        {
                            @for (int giorno = 1; giorno <= DateTime.DaysInMonth(Model.Year, Model.Month); giorno++)
                            {
                                DateTime dataCorrente = new DateTime(Model.Year, Model.Month, giorno);
                                var attendancesForDay = presenza.Where(a => a.DateIn.Day == giorno);

                                if (dataCorrente.DayOfWeek is DayOfWeek.Saturday or DayOfWeek.Sunday)
                                {
                                    <tr style="height: 40px;">
                                        <td class="text-center" style="background-color: #d3d3d3;">@giorno</td>
                                        <td style="background-color: #ededed;">

                                            @{
                                                TimeSpan? totalTime = TimeSpan.Zero;
                                                var NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioSabato" || c.Type == "StraordinarioNotturno"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                    }
                                                    NotNull = true;
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }

                                            @{
                                                string presenzeDivID = "Vpresenze-" + presenza.Key.EmployeeID + "-" + giorno + "-stra";
                                            }

                                            @if (NotNull && totalTime == TimeSpan.Zero)
                                            {
                                                <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        In attività
                                                    </b>
                                                </div>
                                            }
                                            else if (NotNull && totalTime != TimeSpan.Zero)
                                            {
                                                <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }

                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioSabato" || c.Type == "StraordinarioNotturno"))
                                                {
                                                    <a style="cursor: pointer;">
                                                        <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; display: flex; justify-content: center; align-items: center; margin-bottom: 3px;" title="Straordinario">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    <tr style="height: 40px;">
                                        <td class="text-center w-25">@giorno</td>
                                        <td class="text-center w-75">

                                            @{
                                                TimeSpan? totalTime = TimeSpan.Zero;
                                                var NotNull = false;

                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "Presenza"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                    }
                                                    NotNull = true;
                                                }
                                                if (totalTime > TimeSpan.FromHours(8))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }

                                            @{
                                                string presenzeDivID = "Vpresenze-" + presenza.Key.EmployeeID + "-" + giorno + "-pre";
                                            }

                                            @if (NotNull && totalTime == TimeSpan.Zero)
                                            {
                                                <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Presenza" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        In attività
                                                    </b>
                                                </div>
                                            }
                                            else if (NotNull && totalTime != TimeSpan.Zero)
                                            {
                                                <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Presenza" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }

                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "Presenza"))
                                                {
                                                    <a style="cursor: pointer;" >
                                                        <div style="color: white; background-color: green; border-radius: 10px; padding: 2px 3px 2px 3px; display: flex; justify-content: center; align-items: center; margin-bottom: 3px;" title="Presenza">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>

                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioOrdinario" || c.Type == "StraordinarioNotturno"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                    }
                                                    NotNull = true;
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }

                                            @{
                                                presenzeDivID = "Vpresenze-" + presenza.Key.EmployeeID + "-" + giorno + "-stra";
                                            }

                                            @if (NotNull && totalTime == TimeSpan.Zero)
                                            {
                                                <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        In attività
                                                    </b>
                                                </div>
                                            }
                                            else if (NotNull && totalTime != TimeSpan.Zero)
                                            {
                                                <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Straordinario" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }

                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "StraordinarioOrdinario" || c.Type == "StraordinarioNotturno"))
                                                {
                                                    <a style="cursor: pointer;">
                                                        <div style="color: white; background-color: #003399; border-radius: 10px; padding: 2px 3px 2px 3px; display: flex; justify-content: center; align-items: center; margin-bottom: 3px;" title="Straordinario">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>

                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }

                                            @{
                                                presenzeDivID = "Vpresenze-" + presenza.Key.EmployeeID + "-" + giorno + "-perm";
                                            }

                                            @if (NotNull)
                                            {
                                                <div style="color: white; background-color: red; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }

                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso"))
                                                {
                                                    <a style="cursor: pointer;">
                                                        <div style="color: white; background-color: red; border-radius: 10px; padding: 2px 3px 2px 3px; display: flex; justify-content: center; align-items: center; margin-bottom: 3px;" title="Permesso">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>

                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "Malattia"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }

                                            @{
                                                presenzeDivID = "Vpresenze-" + presenza.Key.EmployeeID + "-" + giorno + "-mal";
                                            }

                                            @if (NotNull)
                                            {
                                                <div style="color: white; background-color: #FF7F26; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Malattia" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }

                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "Malattia"))
                                                {
                                                    <a style="cursor: pointer;">
                                                        <div style="color: white; background-color: #FF7F26; border-radius: 10px; padding: 2px 3px 2px 3px; display: flex; justify-content: center; align-items: center; margin-bottom: 3px;" title="Malattia">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>


                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "Festivo"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }

                                            @{
                                                presenzeDivID = "Vpresenze-" + presenza.Key.EmployeeID + "-" + giorno + "-fest";
                                            }

                                            @if (NotNull)
                                            {
                                                <div style="color: white; background-color: #36b9cc; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Festivo" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }

                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "Festivo"))
                                                {
                                                    <a style="cursor: pointer;">
                                                        <div style="color: white; background-color: #36b9cc; border-radius: 10px; display: flex; align-items: center; justify-content: center; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Festivo">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>

                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "Ferie"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }

                                            @{
                                                presenzeDivID = "Vpresenze-" + presenza.Key.EmployeeID + "-" + giorno + "-ferie";
                                            }

                                            @if (NotNull)
                                            {
                                                <div style="color: white; background-color: #f6c23e; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Ferie" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }

                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "Ferie"))
                                                {
                                                    <a style="cursor: pointer;">
                                                        <div style="color: white; background-color: #f6c23e; border-radius: 10px; display: flex; align-items: center; justify-content: center; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Ferie">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                            
                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "CassaIntegrazione"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }

                                            @{
                                                presenzeDivID = "Vpresenze-" + presenza.Key.EmployeeID + "-" + giorno + "-cassa";
                                            }

                                            @if (NotNull)
                                            {
                                                <div style="color: white; background-color: #9A83BC; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Cassa integrazione" onclick="togglePresenzeV('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }

                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "CassaIntegrazione"))
                                                {
                                                    <a style="cursor: pointer;">
                                                        <div style="color: white; background-color: #9A83BC; border-radius: 10px; display: flex; align-items: center; justify-content: center; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Cassa integrazione">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                            
                                            @* Lavoro durante festivo *@
                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "LavoroFestivo"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }
    
                                            @{
                                                presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-lavholy";
                                            }
                                            
                                            @if(NotNull){
                                                <div style="color: white; background-color: #0000FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Lavoro durante festivo" onclick="togglePresenze('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }
                                            
                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "LavoroFestivo"))
                                                {
                                                    <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                        <div style="color: white; background-color: #0000FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Lavoro durante festivo">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                            
                                             @* Maggiorazione notturno *@
                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "MaggiorazioneNotturno"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }
    
                                            @{
                                                presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-maggnot";
                                            }
                                            
                                            @if(NotNull){
                                                <div style="color: white; background-color: #6F00FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Lavoro maggiorazione notturno" onclick="togglePresenze('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }
                                            
                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "MaggiorazioneNotturno"))
                                                {
                                                    <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                        <div style="color: white; background-color: #6F00FF; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Lavoro maggiorazione notturno">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                            
                                            @* Permesso per 104 *@
                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso104"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                               
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
    
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }
    
                                            @{
                                                presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-104";
                                            }
                                            
                                            @if(NotNull){
                                                <div style="color: white; background-color: #808080; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per 104" onclick="togglePresenze('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }
                                                                                
                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "Permesso104"))
                                                {
                                                    <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                        <div style="color: white; background-color: #808080; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per 104">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                            
                                            @* Permesso per Infortunio iniziale *@
                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioIniziale"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                               
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
    
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }
    
                                            @{
                                                presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-InfIni";
                                            }
                                            
                                            @if(NotNull){
                                                <div style="color: white; background-color: #ffff00; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per infortunio iniziale" onclick="togglePresenze('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }
                                                                                
                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioIniziale"))
                                                {
                                                    <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                        <div style="color: white; background-color: #ffff00; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per infortunio iniziale">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                            
                                            @* Permesso per Infortunio prolungato *@
                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioProlungato"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                               
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
    
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }
    
                                            @{
                                                presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-Inf";
                                            }
                                            
                                            @if(NotNull){
                                                <div style="color: white; background-color: #e9e935; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Permesso per infortunio prolungato" onclick="togglePresenze('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }
                                                                                
                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "InfortunioProlungato"))
                                                {
                                                    <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                        <div style="color: white; background-color: #e9e935; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Permesso per infortunio prolungato">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                            
                                            @* Congedo matrimoniale *@
                                            @{
                                                totalTime = TimeSpan.Zero;
                                                NotNull = false;
                                                foreach (var presence in attendancesForDay.Where(c => c.Type == "CongedoMatrimoniale"))
                                                {
                                                    if (presence.DateOut != null)
                                                    {
                                                        totalTime += presence.DateOut - presence.DateIn;
                                                        NotNull = true;
                                                    }
                                                }
                                               
                                                if (totalTime == TimeSpan.FromHours(9))
                                                {
                                                    totalTime = TimeSpan.FromHours(8);
                                                }
    
                                                totalTime = (totalTime.Value.Minutes < 45) ? TimeSpan.FromHours(totalTime.Value.Hours) : TimeSpan.FromHours(totalTime.Value.Hours + 1);
                                            }
    
                                            @{
                                                presenzeDivID = "presenze-" + presenza.Key.EmployeeID + "-" + giorno +"-Mat";
                                            }
                                            
                                            @if(NotNull){
                                                <div style="color: white; background-color: #FFC0CB; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px; display: flex; align-items: center; cursor: pointer;" title="Congedo matrimoniale" onclick="togglePresenze('@presenzeDivID')">
                                                    <b style="white-space: nowrap; margin: 0 auto;">
                                                        @totalTime?.ToString(@"hh")h
                                                        @totalTime?.ToString(@"mm")m
                                                    </b>
                                                </div>
                                            }
                                                                                
                                            <div id="@presenzeDivID" style="display: none;">
                                                @foreach (var presence in attendancesForDay.Where(c => c.Type == "CongedoMatrimoniale"))
                                                {
                                                    <a style="cursor: pointer;" title="Modifica Entrata/Uscita" data-toggle="modal" data-target="#modify-modal" onclick="SetDataAttendanceId('#modify-modal', @presence.AttendanceID), SetDataAttendanceId('#confirm-del-modal', @presence.AttendanceID)">
                                                        <div style="color: white; background-color: #FFC0CB; border-radius: 10px; padding: 2px 3px 2px 3px; margin-bottom: 3px;" title="Congedo matrimoniale">
                                                            <b style="white-space: nowrap;">@(presence.DateIn.ToString(@"HH\:mm"))-@(presence.DateOut?.ToString(@"HH\:mm"))</b>
                                                        </div>
                                                    </a>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                        }
                    </table>
                </div>
            </div>
        </div>
        </div>
    </div>

<div class="modal fade" id="confirm-no-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Conferma mancata timbratura</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Vuoi avvertire l'amministrazione di una mancata timbratura?</p>
                <div class="form-group">
                    <label for="note">Aggiungi una nota:</label>
                    <textarea class="form-control" id="note" rows="3"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Annulla</button>
                <button class="btn btn-primary" onclick="SendNoAttendance()">Conferma</button>
            </div>
        </div>
    </div>
</div>


<style>

table {
  width: 100%;
  border-collapse: collapse;
  border-radius:  15px;
}

th, td {
  border: 1px solid #ccc;
  padding: 8px;
}

@@media (max-width:800px)  {
    #mobile-v1{
        width: 75% !important;
        display:  block !important;
    }
    
    #mobile-v{
        display:  none !important;
    }
}

@@media (max-width:600px)  {
    
    #mobile-v2{
        margin-left: -5%;
    }
    
    #mobile-v3{
        margin-left: -5%;
    }
    
    #mobile-v4{
        display: none;
    }
    
    #mobile-v5{
        display: block !important;
    }
    
    .parallel-tables {
        display: flex;
      }
      .table-column {
        flex: 1;
      }
      table {
        border-collapse: collapse;
        width: 100%;
      }
      th, td {
        border: 1px solid grey;
        padding: 8px;
      }
    
}

</style>
@section Scripts
{

    <script>
        
        function SendNoAttendance() {
            var EmployeeId = @Model.Employee.EmployeeID;
            var note = $("#note").val();
            $.ajax({
                url: '/Attendance/SendNoAttendance',
                type: 'POST',
                data: { EmployeeId: EmployeeId, note: note},
                success: function (data) {
                    $("#confirm-no-modal").modal('toggle');
                    console.log('Completato');
                },
                error: function (xhr, status, error) {
                    $("#confirm-no-modal").modal('toggle');
                    console.log('Errore durante l\'invio:');
                }
            });
        }
                
        function togglePresenze(id) {
            var presenzeDiv = document.getElementById(id);
            presenzeDiv.style.display = (presenzeDiv.style.display === "none") ? "block" : "none";
        }
        
        function togglePresenzeV(id) {
            var presenzeDiv = document.getElementById(id);
            presenzeDiv.style.display = (presenzeDiv.style.display === "none") ? "block" : "none";
        }
         
        window.addEventListener('DOMContentLoaded', function() {
          document.getElementById('accordionSidebar').classList.add('toggled');
          document.getElementById('sidebarToggleTop').style.display = ('none');
           var navBar = document.querySelector('.navbar');
            var companyName = document.createElement('span');
            companyName.textContent = 'ReMa SRL';
            companyName.classList.add('navbar-brand', 'font-weight-bold');
            companyName.style.color = '#4E73DF'; // Colore blu
            navBar.insertBefore(companyName, navBar.firstChild);
            
        });
    </script>

}