// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RemaSoftware.Domain.Data;

#nullable disable

namespace RemaSoftware.Domain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230330104355_DDTSupplier")]
    partial class DDTSupplier
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchId"), 1L, 1);

                    b.Property<string>("QrCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BatchId");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.BatchOperation", b =>
                {
                    b.Property<int>("BatchOperationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchOperationID"), 1L, 1);

                    b.Property<int>("BatchID")
                        .HasColumnType("int");

                    b.Property<decimal?>("ExtraPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("ExtraPriceIsPending")
                        .HasColumnType("bit");

                    b.Property<int>("OperationID")
                        .HasColumnType("int");

                    b.Property<int>("Ordering")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("BatchOperationID");

                    b.HasIndex("BatchID");

                    b.HasIndex("OperationID");

                    b.ToTable("BatchOperations");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientID"), 1L, 1);

                    b.Property<string>("Cap")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FC_ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nation_ISO")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("P_Iva")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Pec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Province")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SDI")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Street")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StreetNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_Association", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ddt_In_ID")
                        .HasColumnType("int");

                    b.Property<int>("Ddt_Out_ID")
                        .HasColumnType("int");

                    b.Property<int>("NumberPieces")
                        .HasColumnType("int");

                    b.Property<string>("TypePieces")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Ddt_In_ID");

                    b.HasIndex("Ddt_Out_ID");

                    b.ToTable("Ddt_Associations");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_In", b =>
                {
                    b.Property<int>("Ddt_In_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ddt_In_ID"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FC_Ddt_In_ID")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsPrompted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReso")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberLostPiece")
                        .HasColumnType("int");

                    b.Property<int>("NumberMissingPiece")
                        .HasColumnType("int");

                    b.Property<int>("NumberWastePiece")
                        .HasColumnType("int");

                    b.Property<int>("Number_Piece")
                        .HasColumnType("int");

                    b.Property<int>("Number_Piece_Now")
                        .HasColumnType("int");

                    b.Property<decimal>("PendingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("PriceIsPending")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price_Uni")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("SubBatchID")
                        .HasColumnType("int");

                    b.HasKey("Ddt_In_ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SubBatchID");

                    b.ToTable("Ddts_In");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_Out", b =>
                {
                    b.Property<int>("Ddt_Out_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ddt_Out_ID"), 1L, 1);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FC_Ddt_Out_ID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ddt_Out_ID");

                    b.HasIndex("ClientID");

                    b.ToTable("Ddts_Out");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_Supplier", b =>
                {
                    b.Property<int>("Ddt_Supplier_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ddt_Supplier_ID"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost_Uni")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataReIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FC_Ddt_Supplier_ID")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsReso")
                        .HasColumnType("bit");

                    b.Property<int>("NumberLostPiece")
                        .HasColumnType("int");

                    b.Property<int>("NumberReInPiece")
                        .HasColumnType("int");

                    b.Property<int>("NumberWastePiece")
                        .HasColumnType("int");

                    b.Property<int>("Number_Piece")
                        .HasColumnType("int");

                    b.Property<int>("OperationTimelineID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.HasKey("Ddt_Supplier_ID");

                    b.HasIndex("OperationTimelineID")
                        .IsUnique();

                    b.HasIndex("SupplierID");

                    b.ToTable("Ddt_Suppliers");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("LostPieces")
                        .HasColumnType("int");

                    b.Property<int>("OkPieces")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubBatchCode")
                        .HasColumnType("int");

                    b.Property<int>("WastePieces")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Label");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Operation", b =>
                {
                    b.Property<int>("OperationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperationID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OperationID");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.OperationTimeline", b =>
                {
                    b.Property<int>("OperationTimelineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OperationTimelineID"), 1L, 1);

                    b.Property<int>("BatchOperationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("SubBatchID")
                        .HasColumnType("int");

                    b.Property<bool>("UseForStatics")
                        .HasColumnType("bit");

                    b.HasKey("OperationTimelineID");

                    b.HasIndex("BatchOperationID");

                    b.HasIndex("SubBatchID");

                    b.ToTable("OperationTimelines");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RemaCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductID");

                    b.HasIndex("ClientID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.SubBatch", b =>
                {
                    b.Property<int>("SubBatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubBatchID"), 1L, 1);

                    b.Property<int>("BatchID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("SubBatchID");

                    b.HasIndex("BatchID");

                    b.ToTable("SubBatches");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"), 1L, 1);

                    b.Property<string>("Cap")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FC_SupplierID")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nation_ISO")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("P_Iva")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Pec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Province")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SDI")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Street")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StreetNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SupplierID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.UserClient", b =>
                {
                    b.Property<string>("MyUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.HasKey("MyUserID", "ClientID");

                    b.HasIndex("ClientID");

                    b.HasIndex("MyUserID")
                        .IsUnique();

                    b.ToTable("UserClients");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Warehouse_Stock", b =>
                {
                    b.Property<int>("Warehouse_StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Warehouse_StockID"), 1L, 1);

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Number_Piece")
                        .HasColumnType("int");

                    b.Property<decimal>("Price_Uni")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Warehouse_StockID");

                    b.ToTable("Warehouse_Stocks");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.MyUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("MyUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.BatchOperation", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.Batch", "Batch")
                        .WithMany("BatchOperations")
                        .HasForeignKey("BatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RemaSoftware.Domain.Models.Operation", "Operations")
                        .WithMany("BatchOperations")
                        .HasForeignKey("OperationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Operations");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_Association", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.Ddt_In", "Ddt_In")
                        .WithMany("Ddt_Associations")
                        .HasForeignKey("Ddt_In_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RemaSoftware.Domain.Models.Ddt_Out", "Ddt_Out")
                        .WithMany("Ddt_Associations")
                        .HasForeignKey("Ddt_Out_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ddt_In");

                    b.Navigation("Ddt_Out");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_In", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.Product", "Product")
                        .WithMany("Ddts_In")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RemaSoftware.Domain.Models.SubBatch", "SubBatch")
                        .WithMany("Ddts_In")
                        .HasForeignKey("SubBatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SubBatch");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_Out", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.Client", "Client")
                        .WithMany("DdtOuts")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_Supplier", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.OperationTimeline", "OperationTimeline")
                        .WithOne("DdtSupplier")
                        .HasForeignKey("RemaSoftware.Domain.Models.Ddt_Supplier", "OperationTimelineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RemaSoftware.Domain.Models.Supplier", "Supplier")
                        .WithMany("DdtSuppliers")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationTimeline");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.OperationTimeline", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.BatchOperation", "BatchOperation")
                        .WithMany("OperationTimelines")
                        .HasForeignKey("BatchOperationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RemaSoftware.Domain.Models.SubBatch", "SubBatch")
                        .WithMany("OperationTimelines")
                        .HasForeignKey("SubBatchID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BatchOperation");

                    b.Navigation("SubBatch");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Product", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.SubBatch", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.Batch", "Batch")
                        .WithMany("SubBatches")
                        .HasForeignKey("BatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.UserClient", b =>
                {
                    b.HasOne("RemaSoftware.Domain.Models.Client", "Client")
                        .WithMany("UserClients")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RemaSoftware.Domain.Models.MyUser", "MyUser")
                        .WithOne("UserClient")
                        .HasForeignKey("RemaSoftware.Domain.Models.UserClient", "MyUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("MyUser");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Batch", b =>
                {
                    b.Navigation("BatchOperations");

                    b.Navigation("SubBatches");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.BatchOperation", b =>
                {
                    b.Navigation("OperationTimelines");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Client", b =>
                {
                    b.Navigation("DdtOuts");

                    b.Navigation("UserClients");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_In", b =>
                {
                    b.Navigation("Ddt_Associations");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Ddt_Out", b =>
                {
                    b.Navigation("Ddt_Associations");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Operation", b =>
                {
                    b.Navigation("BatchOperations");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.OperationTimeline", b =>
                {
                    b.Navigation("DdtSupplier");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Product", b =>
                {
                    b.Navigation("Ddts_In");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.SubBatch", b =>
                {
                    b.Navigation("Ddts_In");

                    b.Navigation("OperationTimelines");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.Supplier", b =>
                {
                    b.Navigation("DdtSuppliers");
                });

            modelBuilder.Entity("RemaSoftware.Domain.Models.MyUser", b =>
                {
                    b.Navigation("UserClient");
                });
#pragma warning restore 612, 618
        }
    }
}
