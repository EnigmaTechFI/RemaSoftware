@using Microsoft.EntityFrameworkCore.Infrastructure
@model RemaSoftware.Models.HomeViewModel.HomeViewModel
@{
    ViewData["Title"] = "Dashboard";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
    @* <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"> *@
    @*     <i class="fas fa-download fa-sm text-white-50"></i> Generate Report *@
    @* </a> *@
</div>

<div class="row">

    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="h6 font-weight-bold text-primary text-uppercase mb-1">
                            Guadagno ultimo mese
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">&euro; @Model.LastMonthEarnings.ToString("N")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-euro-sign fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="h6 font-weight-bold text-success text-uppercase mb-1">
                            Ordini da concludere
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalCountOrdersNotExtinguished</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar-times fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="h6 font-weight-bold text-info text-uppercase mb-1">
                            Pezzi lavorati
                        </div>
                        <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">@Model.TotalProcessedPieces</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-boxes fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pending Requests Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="h6 font-weight-bold text-warning text-uppercase mb-1">
                            Numero di clienti attuali
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalCustomerCount</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-user-friends fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <!-- Area Chart -->
    <div class="col-xl-8 col-lg-7">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Panoramica guadagni annuali</h6>
                <!--<div class="dropdown no-arrow">
                    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                       data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                         aria-labelledby="dropdownMenuLink">
                        <div class="dropdown-header">Dropdown Header:</div>
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </div>-->
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="dashboardAreaChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Pie Chart -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Top 5 cliente per ordini inviati</h6>
                <!--<div class="dropdown no-arrow">
                    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                       data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                         aria-labelledby="dropdownMenuLink">
                        <div class="dropdown-header">Dropdown Header:</div>
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </div>-->
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="chart-pie pt-4 pb-2">
                    <canvas id="dashboardPieChart"></canvas>
                </div>
                <div class="mt-4 text-center small">
                    @foreach (var cl in Model.PieChartData)
                    {
                        <span class="mr-2">
                            <i class="fas fa-circle" style="color: @cl.BackgroundColor"></i> @cl.Label
                        </span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <!-- Content Column -->
    <div class="col-lg-6 mb-4">

        <!-- Project Card Example -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Ordini vicino alla scadenza</h6>
            </div>
            <div class="card-body">
                @foreach (var order in Model.OrderNearToDeadline)
                {
                    <div class="mb-4">
                        @order.Client.Name, @order.Name, @order.Number_Piece pezzi - (mancano: <b>@order.DataOut.Subtract(DateTime.Now).Days giorni</b>)
                    </div>

                    var percent = $"{order.DataOut.Subtract(DateTime.Now).Days * 100 / order.DataOut.Subtract(order.DataIn).Days }";
                    var css = $"{percent}%";
                    <h4 class="small font-weight-bold">
                        @order.SKU <span class="float-right">@percent%</span>
                    </h4>
                    <div class="progress mb-4">
                        <div class="progress-bar bg-danger" role="progressbar" style="width: @css"
                             aria-valuenow="20" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                }

            </div>
        </div>

    </div>

    <div class="col-lg-6 mb-4">

        <!-- Illustrations -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Aggiungi / sottrai quantità</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-6">
                        <select class="form-control" id="dd-articles">
                            @foreach (var article in Model.StockArticleAddRemQty)
                            {
                                var value = $"{article.Name} - {article.Brand} - {article.Size}";
                                <option value="@article.Warehouse_StockID">@value</option>
                            }
                        </select>
                    </div>

                    <div class="col-6">
                        <a class="btn btn-primary" style="color: #1cc88a" onclick="AddRemoveSingleQty(true)">
                            +1
                        </a>
                        <a class="btn btn-primary" style="color: #e74a3b" onclick="AddRemoveSingleQty(false)">
                            -1
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Approach -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Development Approach</h6>
            </div>
            <div class="card-body">
                <p>
                    SB Admin 2 makes extensive use of Bootstrap 4 utility classes in order to reduce
                    CSS bloat and poor page performance. Custom CSS classes are used to create
                    custom components and custom utility classes.
                </p>
                <p class="mb-0">
                    Before working with this theme, you should become familiar with the
                    Bootstrap framework, especially the utility classes.
                </p>
            </div>
        </div>

    </div>
</div>

<script src="~/vendor/chart.js/Chart.js"></script>

<script>

    function AddRemoveSingleQty(isAdd) {
        var model = {
            articleId: $("#dd-articles").val(),
            qtyToAddRemove: 1,
            qtyToAddRemoveRadio: isAdd ? "1" : "0" 
        }
                
        $.post('@Url.Action("AddOrRemoveQuantity", "Stock")', model, function (data){
            if (data.result == true){
               toastNotifySuccess(data.toastMessage);
            }else{
                toastNotifyError(data.toastMessage);
            }
        });
    }
    
    var ctx = document.getElementById("dashboardPieChart");
    var myPieChart = new Chart(ctx, {
      type: 'doughnut',
      data: {
          labels: @Json.Serialize(Model.PieChartData.Select(s=>s.Label).ToArray()),
        datasets: [{
          data: @Json.Serialize(@Model.PieChartData.Select(s=>int.Parse(s.Value)).ToArray()),
          backgroundColor: @Json.Serialize(@Model.PieChartData.Select(s=>s.BackgroundColor).ToArray()),
          hoverBorderColor: "rgba(234, 236, 244, 1)",
        }],
      },
      options: {
        maintainAspectRatio: false,
        tooltips: {
          backgroundColor: "rgb(255,255,255)",
          bodyFontColor: "#858796",
          borderColor: '#dddfeb',
          borderWidth: 1,
          xPadding: 15,
          yPadding: 15,
          displayColors: false,
          caretPadding: 10,
        },
        legend: {
          display: false
        },
        cutoutPercentage: 80,
      },
    });
    
    
    var ctxArea = document.getElementById("dashboardAreaChart");
    var myLineChart = new Chart(ctxArea, {
      type: 'line',
      data: {
        labels: ["Gen", "Feb", "Mar", "Apr", "Mag", "Giu", "Lug", "Ago", "Set", "Ott", "Nov", "Dic"],
        datasets: [{
          label: "Guadagni",
          lineTension: 0.3,
          backgroundColor: "rgba(78, 115, 223, 0.05)",
          borderColor: "rgba(78, 115, 223, 1)",
          pointRadius: 3,
          pointBackgroundColor: "rgba(78, 115, 223, 1)",
          pointBorderColor: "rgba(78, 115, 223, 1)",
          pointHoverRadius: 3,
          pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
          pointHoverBorderColor: "rgba(78, 115, 223, 1)",
          pointHitRadius: 10,
          pointBorderWidth: 2,
          data: @Json.Serialize(@Model.AreaChartData.Select(s=>decimal.Parse(s.Value)).ToArray()),
        }],
      },
      options: {
        maintainAspectRatio: false,
        layout: {
          padding: {
            left: 10,
            right: 25,
            top: 25,
            bottom: 0
          }
        },
        scales: {
          xAxes: [{
            time: {
              unit: 'date'
            },
            gridLines: {
              display: false,
              drawBorder: false
            },
            ticks: {
              maxTicksLimit: 7
            }
          }],
          yAxes: [{
            ticks: {
              maxTicksLimit: 5,
              padding: 10,
              // Include a dollar sign in the ticks
              callback: function(value, index, values) {
                return '€' + number_format(value);
              }
            },
            gridLines: {
              color: "rgb(234, 236, 244)",
              zeroLineColor: "rgb(234, 236, 244)",
              drawBorder: false,
              borderDash: [2],
              zeroLineBorderDash: [2]
            }
          }],
        },
        legend: {
          display: false
        },
        tooltips: {
          backgroundColor: "rgb(255,255,255)",
          bodyFontColor: "#858796",
          titleMarginBottom: 10,
          titleFontColor: '#6e707e',
          titleFontSize: 14,
          borderColor: '#dddfeb',
          borderWidth: 1,
          xPadding: 15,
          yPadding: 15,
          displayColors: false,
          intersect: false,
          mode: 'index',
          caretPadding: 10,
          callbacks: {
            label: function(tooltipItem, chart) {
              var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
              return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
            }
          }
        }
      }
    });
    
    function number_format(number, decimals, dec_point, thousands_sep) {
      // *     example: number_format(1234.56, 2, ',', ' ');
      // *     return: '1 234,56'
      number = (number + '').replace(',', '').replace(' ', '');
      var n = !isFinite(+number) ? 0 : +number,
        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
        sep = (typeof thousands_sep === 'undefined') ? '.' : thousands_sep,
        dec = (typeof dec_point === 'undefined') ? ',' : dec_point,
        s = '',
        toFixedFix = function(n, prec) {
          var k = Math.pow(10, prec);
          return '' + Math.round(n * k) / k;
        };
      // Fix for IE parseFloat(0.55).toFixed(0) = 0;
      s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
      if (s[0].length > 3) {
        s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
      }
      if ((s[1] || '').length < prec) {
        s[1] = s[1] || '';
        s[1] += new Array(prec - s[1].length + 1).join('0');
      }
      return s.join(dec);
    }
</script>